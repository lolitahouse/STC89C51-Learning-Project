C51 COMPILER V9.01   LCD12864                                                              10/01/2022 21:25:09 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN ..\Obj\lcd12864.obj
COMPILER INVOKED BY: D:\programming learning software\MCU\keilC51\C51\BIN\C51.EXE ..\App\bsp_lcd12864\lcd12864.c BROWSE 
                    -INCDIR(..\App\bsp_lcd12864;..\Public) DEBUG OBJECTEXTEND PRINT(..\Listing\lcd12864.lst) OBJECT(..\Obj\lcd12864.obj)

line level    source

   1          #include  "lcd12864.h"
   2          
   3          
   4          
   5          /*
   6                  函数名：LCD12864_Write_Cmd
   7                  功能：  LCD12864写命令函数
   8                  注意：
   9          */
  10          void LCD12864_Write_Cmd(uint_8 cmd)
  11          {
  12   1              LCD12864_RS = 0;                        //选择命令
  13   1              LCD12864_WR = 0;                        //选择写
  14   1              LCD12864_E = 0;
  15   1              LCD12864_DATAPORT = cmd;        //准备命令
  16   1              Delay_ms(1);
  17   1              LCD12864_E = 1;                         //使能E上升沿写入
  18   1              Delay_ms(1);
  19   1              LCD12864_E = 0;                         //使能E负跳变完成写入
  20   1      }
  21          
  22          /*
  23                  函数名：LCD12864_Write_Data
  24                  功能：  LCD12864写数据函数
  25                  注意：
  26          */
  27          void LCD12864_Write_Data(uint_8 dat)
  28          {
  29   1              LCD12864_RS = 1;                        //选择数据
  30   1              LCD12864_WR = 0;                        //选择写
  31   1              LCD12864_E = 0;
  32   1              LCD12864_DATAPORT = dat;        //准备数据
  33   1              Delay_ms(1);
  34   1              LCD12864_E = 1;                         //使能E上升沿写入
  35   1              Delay_ms(1);
  36   1              LCD12864_E = 0;                         //使能E负跳变完成写入
  37   1      }
  38          
  39          /*
  40                  函数名：LCD12864_Init
  41                  功能：  LCD12864初始化函数
  42                  注意：
  43          */
  44          void LCD12864_Init(void)
  45          {
  46   1              LCD12864_PSB = 1;                       //选择8位或4位并口方式
  47   1              LCD12864_Write_Cmd(0x30);       //数据总线8位，基本指令操作
  48   1              LCD12864_Write_Cmd(0x0c);       //整体显示关，游标显示关，游标正常显示
  49   1              LCD12864_Write_Cmd(0x06);       //写入新数据后光标右移，显示屏不移动
  50   1              LCD12864_Write_Cmd(0x01);       //清屏  
  51   1      }
  52          
  53          /*
  54                  函数名：LCD12864_Clear
C51 COMPILER V9.01   LCD12864                                                              10/01/2022 21:25:09 PAGE 2   

  55                  功能：  LCD12864清屏函数
  56                  注意：
  57          */
  58          void LCD12864_Clear(void)
  59          {
  60   1              LCD12864_Write_Cmd(0x01);       
  61   1      }
  62          
  63          /*
  64                  函数名：LCD12864_Show_String
  65                  功能：  LCD12864显示字符串函数
  66                  注意：  x,y为显示坐标，x=0~7，y=0~3;
  67          */
  68          void LCD12864_Show_String(uint_8 x,uint_8 y,uint_8 *str)
  69          {
  70   1              if(y <= 0)
  71   1                      y = 0;
  72   1              if(y > 3)
  73   1                      y=3;
  74   1              x &= 0x0f;                      //限制x,y不能大于显示范围
  75   1      
  76   1              switch(y)
  77   1              {
  78   2                      case 0: x|=0x80; break;         //第1行地址+x的偏移
  79   2                      case 1: x|=0x90; break;         //第2行地址+x的偏移
  80   2                      case 2: x|=0x88; break;         //第3行地址+x的偏移
  81   2                      case 3: x|=0x98; break;         //第4行地址+x的偏移
  82   2              }
  83   1              LCD12864_Write_Cmd(x);
  84   1              while(*str != '\0')
  85   1              {
  86   2                      LCD12864_Write_Data(*str);
  87   2                      str++;          
  88   2              }               
  89   1      }
  90          
  91          
  92          
  93          
  94          
  95          
  96          
  97          
  98          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    170    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
