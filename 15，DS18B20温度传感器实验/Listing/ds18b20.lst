C51 COMPILER V9.01   DS18B20                                                               09/30/2022 20:43:51 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN ..\Obj\ds18b20.obj
COMPILER INVOKED BY: D:\programming learning software\MCU\keilC51\C51\BIN\C51.EXE ..\App\bsp_ds18b20\ds18b20.c BROWSE IN
                    -CDIR(..\App\bsp_ds18b20;..\Public;..\App\bsp_smg) DEBUG OBJECTEXTEND PRINT(..\Listing\ds18b20.lst) OBJECT(..\Obj\ds18b20
                    -.obj)

line level    source

   1          #include  "ds18b20.h"
   2          #include "intrins.h"
   3          
   4          /*
   5                  函数名： DS18B20_Reset
   6                  功能：   复位DS18B20
   7          */
   8          void DS18B20_Reset(void)
   9          {
  10   1              DS18B20_PORT = 0;       //拉低DQ
  11   1              Delay_10us(75);    //拉低750us
  12   1              DS18B20_PORT = 1;       //DQ=1
  13   1              Delay_10us(2);          //20uS
  14   1      }
  15          
  16          /*
  17                  函数名： DS18B20_Check
  18                  功能：   检测DS18B20是否存在
  19                  注意：   返回1，表示不存在，0表示存在
  20          */
  21          uint_8 DS18B20_Check(void)
  22          {
  23   1              uint_8 time_temp = 0;
  24   1      
  25   1              while(DS18B20_PORT && time_temp < 20)   //等待DQ为低电平
  26   1              {
  27   2                      time_temp++;
  28   2                      Delay_10us(1);  
  29   2              }
  30   1              if(time_temp >= 20)
  31   1                      return 1;                       //如果超时则强制返回1
  32   1              else 
  33   1                      time_temp = 0;
  34   1              while((!DS18B20_PORT) && time_temp < 20)        //等待DQ为高电平
  35   1              {
  36   2                      time_temp++;
  37   2                      Delay_10us(1);
  38   2              }
  39   1              if(time_temp >= 20)
  40   1                      return 1;               //如果超时则强制返回1
  41   1              return 0;
  42   1      }
  43          
  44          /*
  45                  函数名： DS18B20_Read_Bit
  46                  功能：   从DS18B20读取一个位
  47          */
  48          uint_8 DS18B20_Read_Bit(void)
  49          {
  50   1              uint_8 dat = 0;
  51   1              
  52   1              DS18B20_PORT = 0;
  53   1              _nop_();
C51 COMPILER V9.01   DS18B20                                                               09/30/2022 20:43:51 PAGE 2   

  54   1              _nop_();
  55   1              DS18B20_PORT = 1;       
  56   1              _nop_();
  57   1              _nop_();                        //该段时间不能过长，必须在15us内读取数据
  58   1              if(DS18B20_PORT)
  59   1                      dat = 1;                //如果总线上为1则数据dat为1，否则为0
  60   1              else 
  61   1                      dat = 0;
  62   1              Delay_10us(5);
  63   1              return dat;
  64   1      }
  65          
  66          /*
  67                  函数名： DS18B20_Read_Byte
  68                  功能：   从DS18B20读取一个字节
  69          */
  70          uint_8 DS18B20_Read_Byte(void)
  71          {
  72   1              uint_8 i = 0;
  73   1              uint_8 dat = 0;
  74   1              uint_8 temp = 0;
  75   1      
  76   1              for(i=0;i<8;i++)        //先读低位再读高位
  77   1              {
  78   2                      temp = DS18B20_Read_Bit();
  79   2                      dat = (temp<<7) | (dat>>1);
  80   2              }
  81   1              return dat;     
  82   1      }
  83          
  84          /*
  85                  函数名： DS18B20_Write_Byte
  86                  功能：   写一个字节到DS18B20
  87          */
  88          void DS18B20_Write_Byte(uint_8 dat)
  89          {
  90   1              uint_8 i = 0;
  91   1              uint_8 temp = 0;
  92   1      
  93   1              for(i=0;i<8;i++)        //先写低位再写高位
  94   1              {
  95   2                      temp = dat&0x01;        //选择低位准备写入
  96   2                      dat >>= 1;                      //将次高位移到低位
  97   2                      if(temp)
  98   2                      {
  99   3                              DS18B20_PORT = 0;
 100   3                              _nop_();
 101   3                              _nop_();
 102   3                              DS18B20_PORT = 1;       
 103   3                              Delay_10us(6);
 104   3                      }
 105   2                      else
 106   2                      {
 107   3                              DS18B20_PORT=0;
 108   3                              Delay_10us(6);
 109   3                              DS18B20_PORT=1;
 110   3                              _nop_();
 111   3                              _nop_();        
 112   3                      }       
 113   2              }       
 114   1      }
 115          
C51 COMPILER V9.01   DS18B20                                                               09/30/2022 20:43:51 PAGE 3   

 116          /*
 117                  函数名： DS18B20_Start
 118                  功能：   开始温度转换
 119          */
 120          void DS18B20_Start(void)
 121          {
 122   1              DS18B20_Reset();                        //复位
 123   1              DS18B20_Check();                        //检查DS18B20
 124   1              DS18B20_Write_Byte(0xcc);       //SKIP ROM
 125   1          DS18B20_Write_Byte(0x44);   //转换命令      
 126   1      }
 127          
 128          /*
 129                  函数名： DS18B20_Init
 130                  功能：   初始化DS18B20的IO口, 同时检测DS的存在
 131          */
 132          uint_8 DS18B20_Init(void)
 133          {
 134   1              DS18B20_Reset();
 135   1              return DS18B20_Check(); 
 136   1      }
 137          
 138          /*
 139                  函数名： DS18B20_Read_Temperture
 140                  功能：   从DS18B20得到温度值
 141          */
 142          float DS18B20_Read_Temperture(void)
 143          {
 144   1              float temper = 0.0;
 145   1              uint_8 dath = 0;        //高八位
 146   1              uint_8 datl = 0;        //低八位
 147   1              uint_16 value = 0;
 148   1      
 149   1              DS18B20_Start();        //开始转换
 150   1              DS18B20_Reset();        //复位
 151   1              DS18B20_Check();
 152   1              DS18B20_Write_Byte(0xcc);       //SKIP ROM
 153   1          DS18B20_Write_Byte(0xbe);   //读存储器
 154   1      
 155   1              datl = DS18B20_Read_Byte();     //低字节
 156   1              dath = DS18B20_Read_Byte();     //高字节
 157   1              value = (dath<<8) + datl;       //合并为16位数据
 158   1      
 159   1              if((value & 0xf800) == 0xf800)          //判断符号位，负温度
 160   1              {
 161   2                      value = (~value)+1;                     //数据取反再加1
 162   2                      temper = value*(-0.0625);               //乘以精度      
 163   2              }
 164   1              else            //正温度
 165   1              {
 166   2                      temper = value*0.0625;  
 167   2              }
 168   1              return temper;
 169   1      }
 170          
 171          
 172          
 173          
 174          


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.01   DS18B20                                                               09/30/2022 20:43:51 PAGE 4   

   CODE SIZE        =    376    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
